"use strict";(self.webpackChunkcode_groundlight_ai=self.webpackChunkcode_groundlight_ai||[]).push([[4572],{4899:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"guide/working-with-detectors","title":"Working with Detectors","description":"Explicitly create a new detector","source":"@site/docs/guide/3-working-with-detectors.md","sourceDirName":"guide","slug":"/guide/working-with-detectors","permalink":"/python-sdk/docs/guide/working-with-detectors","draft":false,"unlisted":false,"editUrl":"https://github.com/groundlight/python-sdk/tree/main/docs/docs/guide/3-working-with-detectors.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Grabbing Images","permalink":"/python-sdk/docs/guide/grabbing-images"},"next":{"title":"Submitting Image Queries","permalink":"/python-sdk/docs/guide/submitting-image-queries"}}');var i=n(4848),o=n(8453);const a={},s="Working with Detectors",c={},d=[{value:"Explicitly create a new detector",id:"explicitly-create-a-new-detector",level:3},{value:"Retrieve an existing detector",id:"retrieve-an-existing-detector",level:3},{value:"List your detectors",id:"list-your-detectors",level:3},{value:"[BETA] Create a Counting Detector",id:"beta-create-a-counting-detector",level:3},{value:"[BETA] Create a Multi-Class Detector",id:"beta-create-a-multi-class-detector",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"working-with-detectors",children:"Working with Detectors"})}),"\n",(0,i.jsx)(t.h3,{id:"explicitly-create-a-new-detector",children:"Explicitly create a new detector"}),"\n",(0,i.jsxs)(t.p,{children:["Typically you'll use the ",(0,i.jsx)(t.code,{children:"get_or_create_detector(name: str, query: str)"})," method to find an existing detector you've already created with the same name, or create a new one if it doesn't exists. But if you'd like to force creating a new detector you can also use the ",(0,i.jsx)(t.code,{children:"create_detector(name: str, query: str)"})," method"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\ndetector = gl.create_detector(name="your_detector_name", query="is there a hummingbird near the feeder?")\n# highlight-end\n'})}),"\n",(0,i.jsx)(t.h3,{id:"retrieve-an-existing-detector",children:"Retrieve an existing detector"}),"\n",(0,i.jsx)(t.p,{children:"To work with a detector that you've previously created, you need to retrieve it using its unique identifier. This is typical in Groundlight applications where you want to continue to use a detector you've already created."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\ndetector = gl.get_detector(id="your_detector_id")\n# highlight-end\n'})}),"\n",(0,i.jsx)(t.p,{children:"Alternatively, you can retrieve a detector by its name:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\ndetector = gl.get_detector_by_name(name="your_detector_name")\n# highlight-end\n'})}),"\n",(0,i.jsx)(t.h3,{id:"list-your-detectors",children:"List your detectors"}),"\n",(0,i.jsx)(t.p,{children:"To manage and interact with your detectors, you might need to list them. Groundlight provides a straightforward way to retrieve a list of detectors you've created. By default, the list is paginated to show 10 results per page, but you can customize this to suit your needs."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"from groundlight import Groundlight\n\ngl = Groundlight()\n\n# highlight-start\n# Defaults to 10 results per page\ndetectors = gl.list_detectors()\n\n# Pagination: 1st page of 5 results per page\ndetectors = gl.list_detectors(page=1, page_size=5)\n# highlight-end\n"})}),"\n",(0,i.jsx)(t.h3,{id:"beta-create-a-counting-detector",children:"[BETA] Create a Counting Detector"}),"\n",(0,i.jsx)(t.p,{children:"So far, all of the detectors we've created have been binary classification detectors. But what if you want to count the number of objects in an image? You can create a counting detector to do just that. Counting detectors also return bounding boxes around the objects they count."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Counting Detectors are available on ",(0,i.jsx)(t.a,{href:"https://www.groundlight.ai/pricing",children:"Pro, Business, and Enterprise plans"}),"."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import ExperimentalApi\n\ngl_experimental = ExperimentalApi()\n\n# highlight-start\ndetector = gl_experimental.create_counting_detector(name="your_detector_name", query="How many cars are in the parking lot?", max_count=20)\n# highlight-end\n'})}),"\n",(0,i.jsx)(t.h3,{id:"beta-create-a-multi-class-detector",children:"[BETA] Create a Multi-Class Detector"}),"\n",(0,i.jsx)(t.p,{children:"If you want to classify images into multiple categories, you can create a multi-class detector."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:"notest",children:'from groundlight import ExperimentalApi\n\ngl_experimental = ExperimentalApi()\n\n# highlight-start\nclass_names = ["Golden Retriever", "Labrador Retriever", "German Shepherd"]\ndetector = gl_experimental.create_multiclass_detector(\n    name, query="What kind of dog is this?", class_names=class_names\n)\n# highlight-end\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(6540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);