# coding: utf-8

"""
    Groundlight API

    Ask visual queries and get answers.  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Contact: support@groundlight.ai
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class ClassificationResult(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Our classification result. This result can come from the detector, or a human reviewer.
    """
    _required_property_names = set((
        'label',
    ))
    
    
    class confidence(
        _SchemaValidator(
            inclusive_maximum=1,
            inclusive_minimum=0,
        ),
        Float64Schema
    ):
        pass
    label = StrSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        label: label,
        confidence: typing.Union[confidence, Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'ClassificationResult':
        return super().__new__(
            cls,
            *args,
            label=label,
            confidence=confidence,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )
